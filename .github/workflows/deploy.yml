name: Spring Boot CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      working-directory: ./myapp
      run: mvn clean package -DskipTests

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: springboot-jar
        path: myapp/target/*.jar

    - name: Setup SSH key
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > ec2-key.pem
        chmod 600 ec2-key.pem

    - name: Copy JAR to EC2
      run: |
        scp -i ec2-key.pem -o StrictHostKeyChecking=no myapp/target/*.jar ec2-user@${{ secrets.EC2_PUBLIC_IP }}:/home/ec2-user/app.jar

    - name: Deploy on EC2
      run: |
        ssh -i ec2-key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          # Kill old process if running
          pgrep -f "java -jar app.jar" && kill -9 $(pgrep -f "java -jar app.jar") || true
          # Run new jar in background
          nohup java -jar /home/ec2-user/app.jar > app.log 2>&1 &
        EOF
